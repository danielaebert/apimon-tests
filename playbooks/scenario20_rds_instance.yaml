---

# Scenario to test RDS service.
# A VPC is created and RDS instance
#
- name: Scenario 20 - RDS Instance
  hosts: localhost
  vars:
    prefix: scenario20-rds-
  tasks:
    - set_fact:
        prefix: "{{ (prefix + ( lookup('env', 'TASK_EXECUTOR_JOB_ID') | default(99999999 | random | to_uuid | hash('md5'), true) ) ) }}"

    - set_fact:
        test_rds_instance_name: "{{ (prefix + '-inst') }}"
        test_security_group_name: "{{ (prefix + '-sg') }}"
        test_network_name: "{{ ( prefix + '-net') }}"
        test_router_name: "{{ ( prefix + '-vpc') }}"

    - block:

      - name: Create VPC
        include_role:
          name: opentelekomcloud.vpc
        vars:
          network_name: "{{ test_network_name }}"
          router_name: "{{ test_router_name }}"

      - name: Create SG
        openstack.cloud.security_group:
          name: "{{ test_security_group_name }}"
          description: "dummy"

      - name: Get network facts
        openstack.cloud.networks_info:
          name: "{{ test_network_name }}"
        register: networks

      - name: Pick random AZ
        set_fact:
          rds_az: "{{ networks['openstack_networks'][0]['availability_zones'] | random }}"

      - name: Delete not existent RDS instance
        opentelekomcloud.cloud.rds_instance:
          state: "absent"
          name: "_definitely_not_existing"

      - name: Create Instance
        opentelekomcloud.cloud.rds_instance:
          state: "present"
          name: "{{ test_rds_instance_name }}"
          availability_zone: "{{ rds_az }}"
          datastore_type: "postgresql"
          datastore_version: "10"
          flavor: "rds.pg.c2.medium"
          network: "{{ test_network_name }}"
          password: "Test@12345678"
          port: 5432
          region: "eu-de"
          router: "{{ test_router_name }}"
          security_group: "{{ test_security_group_name }}"
          volume_type: "COMMON"
          volume_size: 40
          timeout: 600
        tags:
          - "service=rds"
          - "metric=create_rds"

      always:
        # do a cleanup
        - block:

            - name: Delete RDS instance
              opentelekomcloud.cloud.rds_instance:
                state: "absent"
                name: "{{ test_rds_instance_name }}"

            - name: Sleep a few seconds until port freed
              wait_for:
                timeout: 400
              delegate_to: localhost

            - name: Delete SG
              openstack.cloud.security_group:
                name: "{{ test_security_group_name }}"
                state: absent

            - name: Delete VPC
              include_role:
                name: opentelekomcloud.vpc
              vars:
                state: "absent"
                network_name: "{{ test_network_name }}"
                router_name: "{{ test_router_name }}"

          ignore_errors: true
