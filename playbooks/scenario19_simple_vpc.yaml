---

- name: Scenario 19 - basic vpc functionality
  hosts: localhost
  vars:
    prefix: scenario19-
  tasks:
    - name: Check vpc endpoint
      script: check_vpc_ep.py

    - set_fact:
        prefix: "{{ (prefix + ( lookup('env', 'TASK_EXECUTOR_JOB_ID') | default(99999999 | random | to_uuid | hash('md5'), true) ) ) }}"

    - set_fact:
        test_router_name: "{{ (prefix + '-test_router_apimon') }}"
        test_subnet_name: "{{ (prefix + '-test_subnet_apimon') }}"
        test_network_name: "{{ (prefix + '-test_network_apimon') }}"
        test_security_group_name: "{{ (prefix + '-sg') }}"

    - block:

      - name: Create VPC (Router + Net + Subnet)
        include_role:
          name: opentelekomcloud.vpc
        vars:
          router_name: "{{ test_router_name }}"
          network_name: "{{ test_network_name }}"
          subnet_name: "{{ test_subnet_name }}"
          state: present
          enable_snat: False
  
      - name: Create SecurityGroup
        os_security_group:
          name: "{{ test_security_group_name }}"
          description: Test Security group created by APImon
  
      - name: Create SecurityGroupRule
        os_security_group_rule:
          security_group: "{{ test_security_group_name }}"
          protocol: tcp
          port_range_min: 2208
          port_range_max: 2209
          remote_ip_prefix: 0.0.0.0/0
      
      - name: List SecurityGroups with Rules
        script: list_security_groups.py
    
      - name: List Networks
        os_networks_facts:

      - name: List Subnets
        os_subnets_facts:

      - name: List Routers
        script: list_routers.py
     
      - name: Create floatingip 
        register: fip
        script: create_floatingip.py

      - name: List floatingips
        script: list_floatingips.py
      
      always:
     
        - name: Delete floatingip 
          script: delete_floatingip.py  {{ fip.stdout }}

        - name: Delete SecurityGroupRule
          os_security_group_rule:
            state: "absent"
            security_group: "{{ test_security_group_name }}"
            protocol: tcp
            port_range_min: 2208
            port_range_max: 2209
            remote_ip_prefix: 0.0.0.0/0
      
        - name: Delete SecurityGroup
          os_security_group:
            state: "absent"
            name: "{{ test_security_group_name }}"
    
        - name: Delete VPC
          include_role:
            name: opentelekomcloud.vpc
          vars:
            router_name: "{{ test_router_name }}"
            network_name: "{{ test_network_name }}"
            subnet_name: "{{ test_subnet_name }}"
            state: absent
